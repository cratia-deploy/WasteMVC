@model WasteMVC.Models.WastesView.WastesIndex

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="currentFilter" value="@ViewData[" CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th class="text-center">
                <a asp-controller="Wastes"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["DateSort"]"
                   asp-route-page="@(Model.View.PageIndex)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-id="">
                    @Html.DisplayNameFor(model => model.Wastes.FirstOrDefault().DateTime)
                </a>
            </th>
            <th class="text-center">
                <a asp-controller="Wastes"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["WasteTypeSort"]"
                   asp-route-page="@(Model.View.PageIndex)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-id="">
                    @Html.DisplayNameFor(model => model.Wastes.FirstOrDefault().WasteType)
                </a>
            </th>
            <th class="text-center">
                <a asp-controller="Wastes"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["WeightSort"]"
                   asp-route-page="@(Model.View.PageIndex)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-id="">
                    @Html.DisplayNameFor(model => model.Wastes.FirstOrDefault().Weight)
                </a>
            </th>
            <th class="text-center">
                <a asp-controller="Wastes"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["CostSort"]"
                   asp-route-page="@(Model.View.PageIndex)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-id="">
                    @Html.DisplayNameFor(model => model.Wastes.FirstOrDefault().Cost)
                </a>
            </th>
            <th class="text-center">
                <a asp-controller="Wastes"
                   asp-action="Index"
                   asp-route-sortOrder="@ViewData["SalePriceSort"]"
                   asp-route-page="@(Model.View.PageIndex)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-id="">
                    @Html.DisplayNameFor(model => model.Wastes.FirstOrDefault().SalePrice)
                </a>
            </th>
            <th class="text-center">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item1 in Model.View)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item1.DateTime)</td>
                <td>@Html.DisplayFor(modelItem => item1.WasteType.Description)</td>
                <td>@Html.DisplayFor(modelItem => item1.Weight)</td>
                <td>@Html.DisplayFor(modelItem => item1.Cost)</td>
                <td>@Html.DisplayFor(modelItem => item1.SalePrice)</td>
                <td class="text-center">
                    <a asp-controller="Wastes"
                       asp-action="Index"
                       asp-route-page="@(Model.View.PageIndex)"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-id="@item1.Id">
                        <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                    </a> |
                    <a asp-action="Edit" asp-route-id="@item1.Id"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a> |
                    <a asp-action="Details" asp-route-id="@item1.Id"><span class="glyphicon glyphicon-zoom-in" aria-hidden="true"></span></a> |
                    <a asp-action="Delete" asp-route-id="@item1.Id"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>
                </td>
            </tr>
            @if (Model.Patners != null && ViewBag.PartnersID == item1.Id)
            {
                @foreach (var item2 in Model.Patners)
                    {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item2.Person.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item2.Person.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item2.Percentage)</td>
                        <td class="text-center">
                            <a asp-controller="Partners" asp-action="Edit" asp-route-id="@item2.Id"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a> |
                            <a asp-controller="Partners" asp-action="Details" asp-route-id="@item2.Id"><span class="glyphicon glyphicon-zoom-in" aria-hidden="true"></span></a> |
                            <a asp-controller="Partners" asp-action="Delete" asp-route-id="@item2.Id"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>
                        </td>
                    </tr>
                }
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.View.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.View.HasNextPage ? "disabled" : "";
}

<div class="center-block text-center">
    <a asp-controller="Wastes"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.View.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       asp-route-id=""
       class="btn btn-default @prevDisabled">
        <
    </a>
    @for (int i = 1; i <= Model.View.TotalPages; i++)
    {
        if (((i - 5) < ViewBag.Page) && (ViewBag.Page < (i + 5)))
        {
            <a asp-controller="Wastes"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-page="@(i)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-id=""
               class="btn btn-default">
                @i
            </a>
        }
        else if (i % 5 == 0 || i == 1)
        {
            <a asp-controller="Wastes"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-page="@(i)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-id=""
               class="btn btn-default">
                @i
            </a>
        }
    }

    <a asp-controller="Wastes"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.View.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       asp-route-id=""
       class="btn btn-default @nextDisabled">
        >
    </a>
</div>